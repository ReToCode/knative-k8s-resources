---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    serving.knative.dev/creator: kubernetes-admin
  creationTimestamp: "2022-11-23T12:24:25Z"
  generation: 1
  labels:
    app: helloworld-go-00001
    serving.knative.dev/configuration: helloworld-go
    serving.knative.dev/configurationGeneration: "1"
    serving.knative.dev/configurationUID: 696be2d8-d1c8-4ca0-91eb-e049608d6662
    serving.knative.dev/revision: helloworld-go-00001
    serving.knative.dev/revisionUID: e5bc03c9-8992-481e-bd0c-effa7a8edfe9
    serving.knative.dev/service: helloworld-go
    serving.knative.dev/serviceUID: eafca205-36a7-454e-ac97-4e0a4fd783d8
  name: helloworld-go-00001-deployment
  namespace: test
  ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Revision
      name: helloworld-go-00001
      uid: e5bc03c9-8992-481e-bd0c-effa7a8edfe9
  resourceVersion: "4850"
  uid: fd4627e4-09c2-44c4-8aaf-adf366212f37
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      serving.knative.dev/revisionUID: e5bc03c9-8992-481e-bd0c-effa7a8edfe9
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        serving.knative.dev/creator: kubernetes-admin
      creationTimestamp: null
      labels:
        app: helloworld-go-00001
        serving.knative.dev/configuration: helloworld-go
        serving.knative.dev/configurationGeneration: "1"
        serving.knative.dev/configurationUID: 696be2d8-d1c8-4ca0-91eb-e049608d6662
        serving.knative.dev/revision: helloworld-go-00001
        serving.knative.dev/revisionUID: e5bc03c9-8992-481e-bd0c-effa7a8edfe9
        serving.knative.dev/service: helloworld-go
        serving.knative.dev/serviceUID: eafca205-36a7-454e-ac97-4e0a4fd783d8
    spec:
      containers:
        - env:
            - name: TARGET
              value: Go Sample v1
            - name: PORT
              value: "8080"
            - name: K_REVISION
              value: helloworld-go-00001
            - name: K_CONFIGURATION
              value: helloworld-go
            - name: K_SERVICE
              value: helloworld-go
          image: gcr.io/knative-samples/helloworld-go@sha256:5ea96ba4b872685ff4ddb5cd8d1a97ec18c18fae79ee8df0d29f446c5efe5f50
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              httpGet:
                path: /wait-for-drain
                port: 8022
                scheme: HTTP
          name: user-container
          ports:
            - containerPort: 8080
              name: user-port
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        - env:
            - name: SERVING_NAMESPACE
              value: test
            - name: SERVING_SERVICE
              value: helloworld-go
            - name: SERVING_CONFIGURATION
              value: helloworld-go
            - name: SERVING_REVISION
              value: helloworld-go-00001
            - name: QUEUE_SERVING_PORT
              value: "8012"
            - name: QUEUE_SERVING_TLS_PORT
              value: "8112"
            - name: CONTAINER_CONCURRENCY
              value: "0"
            - name: REVISION_TIMEOUT_SECONDS
              value: "300"
            - name: REVISION_RESPONSE_START_TIMEOUT_SECONDS
              value: "0"
            - name: REVISION_IDLE_TIMEOUT_SECONDS
              value: "0"
            - name: SERVING_POD
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: SERVING_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SERVING_LOGGING_CONFIG
            - name: SERVING_LOGGING_LEVEL
            - name: SERVING_REQUEST_LOG_TEMPLATE
              value: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl":
            "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}",
            "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent":
            "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}",
            "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}",
            "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"},
            "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
            - name: SERVING_ENABLE_REQUEST_LOG
              value: "false"
            - name: SERVING_REQUEST_METRICS_BACKEND
              value: prometheus
            - name: TRACING_CONFIG_BACKEND
              value: none
            - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
            - name: TRACING_CONFIG_DEBUG
              value: "false"
            - name: TRACING_CONFIG_SAMPLE_RATE
              value: "0.1"
            - name: USER_PORT
              value: "8080"
            - name: SYSTEM_NAMESPACE
              value: knative-serving
            - name: METRICS_DOMAIN
              value: knative.dev/internal/serving
            - name: SERVING_READINESS_PROBE
              value: '{"tcpSocket":{"port":8080,"host":"127.0.0.1"},"successThreshold":1}'
            - name: ENABLE_PROFILING
              value: "false"
            - name: SERVING_ENABLE_PROBE_REQUEST_LOG
              value: "false"
            - name: METRICS_COLLECTOR_ADDRESS
            - name: CONCURRENCY_STATE_ENDPOINT
            - name: CONCURRENCY_STATE_TOKEN_PATH
              value: /var/run/secrets/tokens/state-token
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: ENABLE_HTTP2_AUTO_DETECTION
              value: "false"
          image: gcr.io/knative-releases/knative.dev/serving/cmd/queue@sha256:505179c0c4892ea4a70e78bc52ac21b03cd7f1a763d2ecc78e7bbaa1ae59c86c
          imagePullPolicy: IfNotPresent
          name: queue-proxy
          ports:
            - containerPort: 8022
              name: http-queueadm
              protocol: TCP
            - containerPort: 9090
              name: http-autometric
              protocol: TCP
            - containerPort: 9091
              name: http-usermetric
              protocol: TCP
            - containerPort: 8012
              name: queue-port
              protocol: TCP
            - containerPort: 8112
              name: https-port
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
                - name: K-Network-Probe
                  value: queue
              path: /
              port: 8012
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 25m
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 300
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: "2022-11-23T12:24:26Z"
      lastUpdateTime: "2022-11-23T12:24:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-11-23T12:24:25Z"
      lastUpdateTime: "2022-11-23T12:24:26Z"
      message: ReplicaSet "helloworld-go-00001-deployment-576cb988bf" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1